consumes:
- application/json
definitions:
  Bicycle:
    properties:
      id: &id001
        type: string
      name:
        type: string
      owner:
        type: string
      paint_color:
        type: string
      purchase_date:
        type: string
      self_link: &id002
        type: string
      type: &id003
        type: string
  Collection:
    properties:
      id: *id001
      item_type:
        type: string
      items:
        items:
          type: object
        type: array
      self_link: *id002
      type: *id003
  Dog:
    properties:
      birth_date:
        type: string
      fur_color:
        type: string
      id: *id001
      name:
        type: string
      owner:
        type: string
      self_link: *id002
      type: *id003
  ErrorResponse:
    properties:
      message:
        type: string
  Institution:
    properties:
      assets:
        type: string
      birth-date:
        type: string
      id: *id001
      name:
        type: string
      self_link: *id002
      type: *id003
  Person:
    properties:
      birth-date:
        type: string
      id: *id001
      name:
        type: string
      possessions:
        type: string
      self_link: *id002
      type: *id003
  Property_tracker:
    properties:
      bicycles:
        type: string
      dogs:
        type: string
      id: *id001
      institutions:
        type: string
      people:
        type: string
      self_link: *id002
      type: *id003
info:
  title: Property-tracker API
  version: '0.1'
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
paths:
  /:
    get:
      description: Retrieve a Property_tracker
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': &id004
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Property_tracker'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      description: Update a Property_tracker
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id004
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
  /bicycles:
    get: &id007
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
          schema:
            $ref: '#/definitions/Collection'
        '303':
          $ref: '#/responses/403'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Bicycle
      responses:
        '201':
          description: Created new Bicycle
          headers:
            Location:
              description: perma-link URL of newly-created Bicycle
              type: string
          schema:
            $ref: '#/definitions/Bicycle'
        '303':
          $ref: '#/responses/303'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
  /bicycles/{Bicycle_id}:
    delete:
      description: Delete a Bicycle
      responses:
        '200': &id005
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Bicycle'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    get:
      description: Retrieve a Bicycle
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': *id005
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    parameters:
    - description: Specifies which 'Bicycle' entity from multi-valued relationship
        'bicycles'
      in: path
      name: Bicycle_id
      required: true
      type: string
    patch:
      description: Update a Bicycle
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id005
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
  /bicycles/{Bicycle_id}/owner:
    delete:
      description: Delete an Institution
      responses:
        '200': &id006
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Institution'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    get:
      description: Retrieve an Institution
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': *id006
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    parameters:
    - description: Specifies which 'Bicycle' entity from multi-valued relationship
        'bicycles'
      in: path
      name: Bicycle_id
      required: true
      type: string
    patch:
      description: Update an Institution
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id006
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
  /dogs:
    get: *id007
    post:
      description: Create a new Dog
      responses:
        '201':
          description: Created new Dog
          headers:
            Location:
              description: perma-link URL of newly-created Dog
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '303':
          $ref: '#/responses/303'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
  /dogs/{Dog_id}:
    delete:
      description: Delete a Dog
      responses:
        '200': &id008
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    get:
      description: Retrieve a Dog
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': *id008
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    parameters:
    - description: Specifies which 'Dog' entity from multi-valued relationship 'dogs'
      in: path
      name: Dog_id
      required: true
      type: string
    patch:
      description: Update a Dog
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id008
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
  /dogs/{Dog_id}/owner:
    delete:
      description: Delete an Institution
      responses:
        '200': &id009
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Institution'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    get:
      description: Retrieve an Institution
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': *id009
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    parameters:
    - description: Specifies which 'Dog' entity from multi-valued relationship 'dogs'
      in: path
      name: Dog_id
      required: true
      type: string
    patch:
      description: Update an Institution
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id009
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
  /institutions:
    get: *id007
    post:
      description: Create a new Institution
      responses:
        '201':
          description: Created new Institution
          headers:
            Location:
              description: perma-link URL of newly-created Institution
              type: string
          schema:
            $ref: '#/definitions/Institution'
        '303':
          $ref: '#/responses/303'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
  /institutions/{Institution_id}:
    delete:
      description: Delete an Institution
      responses:
        '200': &id010
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Institution'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    get:
      description: Retrieve an Institution
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': *id010
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    parameters:
    - description: Specifies which 'Institution' entity from multi-valued relationship
        'institutions'
      in: path
      name: Institution_id
      required: true
      type: string
    patch:
      description: Update an Institution
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id010
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
  /institutions/{Institution_id}/assets:
    get: *id007
    parameters:
    - description: Specifies which 'Institution' entity from multi-valued relationship
        'institutions'
      in: path
      name: Institution_id
      required: true
      type: string
    post:
      description: Create a new Dog
      responses:
        '201':
          description: Created new Dog
          headers:
            Location:
              description: perma-link URL of newly-created Dog
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '303':
          $ref: '#/responses/303'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
  /people:
    get: *id007
    post:
      description: Create a new Person
      responses:
        '201':
          description: Created new Person
          headers:
            Location:
              description: perma-link URL of newly-created Person
              type: string
          schema:
            $ref: '#/definitions/Person'
        '303':
          $ref: '#/responses/303'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
  /people/{Person_id}:
    delete:
      description: Delete a Person
      responses:
        '200': &id011
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Person'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    get:
      description: Retrieve a Person
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': *id011
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    parameters:
    - description: Specifies which 'Person' entity from multi-valued relationship
        'people'
      in: path
      name: Person_id
      required: true
      type: string
    patch:
      description: Update a Person
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id011
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
  /people/{Person_id}/possessions:
    get: *id007
    parameters:
    - description: Specifies which 'Person' entity from multi-valued relationship
        'people'
      in: path
      name: Person_id
      required: true
      type: string
    post:
      description: Create a new Dog
      responses:
        '201':
          description: Created new Dog
          headers:
            Location:
              description: perma-link URL of newly-created Dog
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '303':
          $ref: '#/responses/303'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
produces:
- application/json
responses:
  '303':
    description: See other. Server is redirecting client to a different resource
    headers:
      Location:
        description: URL of other resource
        type: string
  '400':
    description: Bad Request. Client request in error
    schema:
      $ref: '#/definitions/ErrorResponse'
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema:
      $ref: '#/definitions/ErrorResponse'
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema:
      $ref: '#/definitions/ErrorResponse'
  '404':
    description: Not Found. Resource not found
    schema:
      $ref: '#/definitions/ErrorResponse'
  '406':
    description: Not Acceptable. Requested media type not availalble
    schema:
      $ref: '#/definitions/ErrorResponse'
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema:
      $ref: '#/definitions/ErrorResponse'
  default:
    description: 5xx errors and other stuff
    schema:
      $ref: '#/definitions/ErrorResponse'
swagger: '2.0'

