definitions:
  Collection:
    properties:
      contents_type:
        type: string
      id:
        type: string
      selfLink:
        type: string
      type:
        type: string
  Dog:
    properties:
      birth_date:
        type: string
      fur_color:
        type: string
      name:
        type: string
      owner:
        type: string
  ErrorResponse:
    properties:
      message:
        type: string
  Person:
    properties:
      birth-date:
        type: string
      dogs:
        type: string
      name:
        type: string
  PropertyTracker:
    properties:
      dogs:
        type: string
      people:
        type: string
info:
  title: PropertyTracker
  version: '0.1'
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
paths:
  /:
    get:
      description: Retrieve a PropertyTracker
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/PropertyTracker'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
  /dogs:
    get: &id003
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
          schema:
            $ref: '#/definitions/Collection'
        '303':
          $ref: '#/responses/403'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      responses:
        '201':
          description: Create a new Dog
          headers:
            Location:
              description: perma-link URL of newly-created Dog
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '303':
          $ref: '#/responses/303'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
  /dogs;{Dog_id}:
    delete:
      description: Delete a Dog
      responses:
        '200': &id001
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    get:
      description: Retrieve a Dog
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': *id001
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    parameters:
    - description: Specifies which 'Dog' entity from multi-valued relationship 'dogs'
      in: path
      name: Dog_id
      required: true
      type: string
    patch:
      description: Update a Dog
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id001
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
  /dogs;{Dog_id}/owner:
    delete:
      description: Delete a Person
      responses:
        '200': &id002
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Person'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    get:
      description: Retrieve a Person
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': *id002
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    parameters:
    - description: Specifies which 'Dog' entity from multi-valued relationship 'dogs'
      in: path
      name: Dog_id
      required: true
      type: string
    patch:
      description: Update a Person
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id002
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
  /people:
    get: *id003
    post:
      responses:
        '201':
          description: Create a new Person
          headers:
            Location:
              description: perma-link URL of newly-created Person
              type: string
          schema:
            $ref: '#/definitions/Person'
        '303':
          $ref: '#/responses/303'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
  /people;{Person_id}:
    delete:
      description: Delete a Person
      responses:
        '200': &id004
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Person'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    get:
      description: Retrieve a Person
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': *id004
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    parameters:
    - description: Specifies which 'Person' entity from multi-valued relationship
        'people'
      in: path
      name: Person_id
      required: true
      type: string
    patch:
      description: Update a Person
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id004
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
  /people;{Person_id}/dogs:
    get: *id003
    parameters:
    - description: Specifies which 'Person' entity from multi-valued relationship
        'people'
      in: path
      name: Person_id
      required: true
      type: string
    post:
      responses:
        '201':
          description: Create a new Dog
          headers:
            Location:
              description: perma-link URL of newly-created Dog
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '303':
          $ref: '#/responses/303'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
  /people;{Person_id}/dogs;{Dog_id}:
    delete:
      description: Delete a Dog
      responses:
        '200': &id005
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    get:
      description: Retrieve a Dog
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200': *id005
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    parameters:
    - description: Specifies which 'Person' entity from multi-valued relationship
        'people'
      in: path
      name: Person_id
      required: true
      type: string
    - description: Specifies which 'Dog' entity from multi-valued relationship 'dogs'
      in: path
      name: Dog_id
      required: true
      type: string
    patch:
      description: Update a Dog
      parameters:
      - $ref: '#/parameters/If-Match'
      responses:
        '200': *id005
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
responses:
  '303':
    description: See other. Server is redirecting client to a different resource
    headers:
      Location:
        description: URL of other resource
        type: string
  '400':
    description: Bad Request. Client request in error
    schema:
      $ref: '#/definitions/ErrorResponse'
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema:
      $ref: '#/definitions/ErrorResponse'
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema:
      $ref: '#/definitions/ErrorResponse'
  '404':
    description: Not Found. Resource not found
    schema:
      $ref: '#/definitions/ErrorResponse'
  '406':
    description: Not Acceptable. Requested media type not availalble
    schema:
      $ref: '#/definitions/ErrorResponse'
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema:
      $ref: '#/definitions/ErrorResponse'
  default:
    description: 5xx errors and other stuff
    schema:
      $ref: '#/definitions/ErrorResponse'
swagger: '2.0'

