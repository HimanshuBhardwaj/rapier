title: Spec Hub API
version: "0.1"
consumes: application/json
produces: application/json text/html
conventions:
  patch_consumes: application/merge-patch+json
  error_response:
    type: string
securityDefinitions:
  sso:
    type: oauth2
    scopes: {}
    flow: application
    tokenUrl: whatever
security:
- sso: []
entities:
  Resource:
    abstract: true
    type: object
    properties:
      self:
        type: string
        readOnly: true
      kind:
        type: string
  PersistentResource:
    allOf:
    - $ref: '#/entities/Resource'
    abstract: true
    properties:
      created:
        type: string
        format: date-time
        readOnly: true
      creator:
        type: string
        format: URL
        readOnly: true
      modified:
        type: string
        format: date-time
        readOnly: true
      modifier:
        type: string
        format: date-time
        readOnly: true
    abstract: true
  Hub:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Hub]
      myHub:
        description: URL of a Folder
        format: uri
        type: string
        relationship: '#Folder'
      sharedWithMe:
        description: URL of a Collection of Folders and Specs
        format: uri
        type: string
        relationship:
          multi_valued_relationship_entity: '#MultiValuedRelationshipResource'
          entities: '#Folder #Spec'
          multiplicity: O:n
          readOnly: true
      things:
        description: URL of a Collection of Specs and Folders
        format: uri
        type: string        
        relationship:
          multi_valued_relationship_entity: '#MultiValuedRelationshipResource'
          entities: '#Spec #Folder'
          multiplicity: O:n
    well_known_URLs: /
    query_paths: 
    - myHub
    - sharedWithMe
    - things
    readOnly: true
  Folder:
    allOf:
    - $ref: '#/entities/PersistentResource'
    query_paths: [contents]
    properties:
      contents:
        description: URL of a Collection of Specs and Folders
        format: uri
        readOnly: true
        type: string
        relationship:
          multi_valued_relationship_entity: '#MultiValuedRelationshipResource'
          entities: '#Spec #Folder'
          multiplicity: O:n
      folder:
        description: URL of a Folder
        format: uri
        type: string
        relationship: '#Folder'
      kind:
        type: string
        enum: [Folder]
      name:
        type: string
      permissions:
        type: array
        items: 
          properties:
            actor:
              format: URL
              type: string
            action:
              type: string
  Spec:
    allOf:
    - $ref: '#/entities/PersistentResource'
    query_paths: [content]
    properties:
      content:
        description: URL of a Content
        format: uri
        type: string
        relationship: '#Content'
      folder:
        description: URL of a Folder
        format: uri
        type: string
        relationship: '#Folder'
      kind:
        type: string
        enum: [Spec]
      name:
        type: string
      permissions:
        type: array
        items: 
          properties:
            actor:
              format: URL
              type: string
            action:
              type: string
  Content:
    type: string
    consumes: application/x-yaml text/yaml text/html text/plain
    produces: application/x-yaml text/yaml text/html text/plain
technical_resources:
  Collection:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Collection]
      items:
        type: array
        items: 
          type: object
    query_parameters:
    - name: properties
      items:
        type: string
      type: array
      required: false
    - name: limit
      type: integer
      minimum: 1
      maximum: 1000
      required: false
    - name: orderby
      type: string
    - name: direction
      type: string
      required: false
      enum: ['ascending', 'descending']
    readOnly: true
  Page:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Page]
      item_type: 
        type: string
      items:
        type: array
        items: 
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        relationship:
          entities: '#Page'
          readOnly: True
      previous_page:
        type: string
        format: uri
        relationship:
          entities: '#Page'
          readOnly: True
    query_parameters:
    - name: properties
      items:
        type: string
      type: array
      required: false
    - name: limit
      type: integer
      minimum: 1
      maximum: 1000
      required: false
    readOnly: true
  MultiValuedRelationshipResource:
    readOnly: true
    oneOf:
      - $ref: '#/technical_resources/Collection'
      - $ref: '#/technical_resources/Page'
implementation_only:
  Hub:
    properties:
      Zmxk:
        description: URL of a Collection of Folders
        format: uri
        type: string        
        relationship:
          entities: '#Folder'
          multiplicity: O:n
      c3Bj:
        description: URL of a Collection of Specs
        format: uri
        type: string        
        relationship:
          entities: '#Spec'
          multiplicity: O:n
    query_paths: 
    - segments: Zmxk;{implementation_key}
      discriminator_separator: "-"
    - segments: Zmxk;{implementation_key}/contents
      discriminator_separator: "-"
    - segments: c3Bj;{implementation_key}
      discriminator_separator: "-"
    - segments: c3Bj;{implementation_key}/content
      discriminator_separator: "-"
  Folder:
    properties:
      implementation_key:
        type: integer  
  Spec:
    properties:
      implementation_key:
        type: integer  
