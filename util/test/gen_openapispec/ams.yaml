swagger: '2.0'
info:
  title: API Management System API
  version: initial
consumes:
- application/json
produces:
- application/json
- text/html
definitions:
  API:
    description: 'APIs define sets of HTTP URL paths available on the World-wide Web
      <p>Historical Note: The APIProduct concept in Apigee Edge (circa 2016) is an
      amalgam of the API and APIProduct concepts

      '
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "API"
        type: string
        enum:
        - API
      name:
        description: 'The name of the API. Must be unique amongst APIs of the same
          org.  The name of the product, along with the name of the org, may be used
          to perform queries using URI templates of the form: https://api.enterprise.apigee.com/v1/organizations/{org-name}/apis/{api-name}

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this API. Used
          in the UI. type: string

          '
      description:
        description: A textual description of the API
        type: string
      machine_readable_description:
        description: 'Defines the URI paths to which this API gives access. The format
          of the description is variable. The simplest is  a fragment URI that points
          to an array of paths in the same document. An alternative is to point to
          an OpenAPI Specification.

          '
        type: string
        format: uri
      environments:
        description: Environments where this API is available. Defines the domain
          names where the paths of the API will be available
        type: array
        items:
          type: string
          format: uri
          x-interface: deployment.yaml#/x-interfaces/Environment
      ui_namesOfProxiesProvidingPaths:
        description: 'The API is specified by the uriPaths property, which defines
          the paths of the API. As a convenience, the UI allows the uriPaths to be
          specified by picking from the list of paths supported by a particular proxy.
          If the user does this, the UI will use this  property to remember the names
          of proxies that were used as sources

          '
        type: array
        items:
          type: string
    x-interface: '#/x-interfaces/API'
  APIProduct:
    description: 'APIProducts define a set of rules, such as quota, constraining client
      access to a specific API.  <p>Historical Note: The APIProduct concept in Apigee
      Edge (circa 2016) is an amalgam of the API and APIProduct concepts

      '
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "APIProduct"
        type: string
        enum:
        - APIProduct
      name:
        description: 'The name of the APIProduct. Must be unique amongst APIProduct
          of the same org.  The name of the APIProduct, along with the name of the
          org, may be used to perform queries using URI templates of the form: https://api.enterprise.apigee.com/v1/organizations/{org-name}/apiproduct/{apiproduct-name}

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this APIProduct.
          Used in the UI.

          '
        type: string
      description:
        description: A textual description of the APIProduct
        type: string
      api:
        description: 'The API exposed by this APIProduct.

          '
        type: string
        format: uri
        x-interface: '#/x-interfaces/API'
      scopes:
        description: 'Defines the OAUTH scopes to which this APIProduct gives access

          '
        type: array
        items:
          type: string
      quota:
        description: 'Defines the quota of requests allowed by this APIProduct.

          '
        type: object
        properties:
          limit:
            type: integer
          interval:
            type: integer
          timeunit:
            type: string
            enum:
            - minute
            - hour
            - day
            - month
      ratePlan:
        type: string
        format: uri
        x-interface: ../mint.yaml#/x-interfaces/RatePlan
    x-interface: '#/x-interfaces/APIProduct'
  Bundle:
    description: 'Bundles allow providers to offer a set of APIProducts under a new
      ratePlan

      '
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "APIProduct"
        type: string
        enum:
        - APIProduct
      name:
        description: 'The name of the Bundle. Must be unique amongst Bundles of the
          same org.  The name of the Bundle, along with the name of the org, may be
          used to perform queries using URI templates of the form: https://api.enterprise.apigee.com/v1/organizations/{org-name}/bundle/{bundle-name}

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this APIProduct.
          Used in the UI.

          '
        type: string
      description:
        description: A textual description of the Bundle
        type: string
      apiProducts:
        description: The list of APIProducts in the bundle
        type: array
        items:
          type: string
          format: uri
          x-interface: '#/x-interfaces/APIProduct'
      ratePlan:
        description: The ratePlan for the bundle. Overrides the individual ratePlans
          in the APIProducts
        type: string
        format: uri
        x-interface: ../mint.yaml#/x-interfaces/RatePlan
  Subscription:
    description: "Subscriptions record the usage of an <a href=\"#APIProduct\">APIProduct</a>\
      \ or <a href=\"#Bundle\">Bundle</a> by a subscriber (a <a href=\"users/#User\"\
      >User</a> or <a href=\"users/#Group\">Group</a> or <a href=\"permissions/#Team\"\
      >Team</a>).  <p>Historical Note: The App concept in Apigee Edge (circa 2016)\
      \ is similar to the Subscription concept, to the point where it can be considered\
      \ a renaming. App was not the best choice of name because the concept  being\
      \ modelled is not an app, it is just a key-protected usage of an APIProduct.\
      \ Using one of these subscriptions per app is only a suggestion\u2014it is not\
      \ possible to know whether customers use  a single subscription for a single\
      \ app, a single subscription for many apps, or a many subscriptions for one\
      \ app. \n"
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "Subscription"
        type: string
        enum:
        - Subscription
      name:
        description: 'The name of the Subscription. Must be unique amongst Subscription
          of the same org.  The name of the Subscription, along with the name of the
          org, may be used to perform queries using URI templates of the form: https://api.enterprise.apigee.com/v1/organizations/{org-name}/subscription/{Subscription-name}

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this Subscription.
          Used in the UI.

          '
      description:
        description: A textual description of the Subscription
        type: string
      credentials:
        description: 'The Key/Secret and the products they apply to. Unlike The 2016
          Edge "App" concept, only one key per Subscription is supported. Edge was
          motiviated to allow many because they thought they were modeling apps, and
          apps may use multiple keys. Since subscriptions are not apps, and apps are
          free to use as many subscriptions as they like, there is no need to support
          multiples keys per Subscription

          '
        type: object
        properties:
          apiProducts:
            description: 'The list of APIProducts to which this Subscription gives
              access

              '
            type: array
            items:
              properties:
                product:
                  type: string
                  format: uri
                  x-interface: '#/x-interfaces/APIProduct'
          keys:
            description: "Subscriptions may include an arbitrary number of keys. Each\
              \ key unlocks the same APIProducts with the same quotas and ratePlans,\
              \ so from a functional perspective, the keys are completely interchangeable.\
              \ Managing multiple keys allows subscribers to track the usage of their\
              \ subscriptions in different contexts. For example, a developer of a\
              \ client app may wish to use the same subscription  in multiple editions\
              \ of the same application, so all usage counts against the same quota.\
              \ Using different keys allows the developer to track which users are\
              \ using the iOS version versus the Android version versus the web site,\
              \ or which users are using a new experimental version versus the classic\
              \ version. This information is available (presumably) to the developer\
              \ through the provider's API portal.git \n"
            type: array
            items:
              properties:
                key:
                  description: 'The API key

                    '
                  type: string
                issued:
                  description: 'The date when the key and secret were issued

                    '
                  type: string
                  format: date-time
                tags:
                  description: 'tags are an array of strings that may be associated
                    with the key. Tags will be displayed in analytics, allowing client
                    application developers to track which applications or application
                    editions/versions genenrated traffic.

                    '
                  type: array
                  items:
                    type: string
                approved:
                  description: "Whether or not the credentials have been approved\
                    \ by the API owner \n"
                  type: boolean
      subscriber:
        description: 'The User who is subscribing.

          '
        type: string
        format: uri
        x-interface:
          oneOf:
          - users.yaml#/x-interfaces/User
          - users.yaml#/x-interfaces/Group
          - permissions.yaml#/x-interfaces/team
      account:
        type: string
        format: uri
      approved:
        description: "Whether or not the subscription has been approved by the API\
          \ owner \n"
        type: boolean
  Page:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      kind:
        type: string
        enum:
        - Page
      items:
        type: array
        items:
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
      previous_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
    readOnly: true
    x-interface: common.yaml#/x-interfaces/Page
  Collection:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      kind:
        type: string
        enum:
        - Collection
      items:
        type: array
        items:
          type: object
    readOnly: true
  MultiValuedRelationship:
    readOnly: true
    x-oneOf:
    - $ref: '#/definitions/Collection'
    - $ref: '#/definitions/Page'
  Resource:
    type: object
    properties:
      self:
        type: string
        readOnly: true
      kind:
        type: string
  PersistentResource:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      created:
        type: string
        format: date-time
        readOnly: true
      creator:
        type: string
        format: URL
        readOnly: true
      modified:
        type: string
        format: date-time
        readOnly: true
      modifier:
        type: string
        format: date-time
        readOnly: true
x-interfaces:
  API:
    get:
      description: Retrieve an API
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/API'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an API entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the API being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/API'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/API'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete an API
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/API'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: API
  APIProduct:
    get:
      description: Retrieve an APIProduct
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/APIProduct'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an APIProduct entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the APIProduct being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/APIProduct'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/APIProduct'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete an APIProduct
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/APIProduct'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: APIProduct
x-templates: {}
paths: {}
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  Access-Control-Request-Headers:
    description: specifies the custom headers the client wishes to use
    in: header
    name: Access-Control-Request-Headers
    required: true
    type: string
  Access-Control-Request-Method:
    description: specifies the method the client wishes to use
    in: header
    name: Access-Control-Request-Method
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
responses:
  '400':
    description: Bad Request. Client request in error
    schema: {}
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema: {}
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema: {}
  '404':
    description: Not Found. Resource not found
    schema: {}
  '406':
    description: Not Acceptable. Requested media type not available
    schema: {}
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema: {}
  default:
    description: 5xx errors and other stuff
    schema: {}
  options_200:
    description: successful
    headers:
      Access-Control-Allow-Headers:
        description: headers allowed
        type: string
      Access-Control-Allow-Methods:
        description: methods allowed
        type: string
      Access-Control-Allow-Origin:
        description: origins allowed
        type: string
      Access-Control-Max-Age:
        description: length of time response can be cached
        type: string
  standard_200:
    description: successful
    headers:
      Content-Location:
        description: perma-link URL of resource
        type: string
      Content-Type:
        description: The media type of the returned body
        type: string
      ETag:
        description: this value must be echoed in the If-Match header of every PATCH
          or PUT
        type: string

