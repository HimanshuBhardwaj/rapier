swagger: '2.0'
info:
  title: KMS APIs
  version: initial
consumes:
- application/json
produces:
- application/json
- text/html
definitions:
  Apigee:
    properties:
      organizations:
        description: The base entity for an account on Apigee Edge, an organization
          is a container for all managed entities, including APIs, API products, developers,
          apps, environments, etc.
        type: string
        format: uri
        x-interface: '#/x-interfaces/Apigee.organizations'
    x-interface: '#/x-interfaces/Apigee'
  Organization:
    description: 'The base entity for an account on Apigee Edge, an organization is
      a container for all managed entities, including APIs, API products, developers,
      apps, environments, etc.

      '
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "Organization"
        type: string
        enum:
        - Organization
      name:
        description: 'The name of the Organization. Must be unique

          '
        type: string
      description:
        description: 'A textual description of the Organization

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this Organization.
          Used in the UI.

          '
        type: string
      type:
        description: 'Type of the Organization which describe whether it''s a trial
          or revenue Organization

          '
        type: string
        enum:
        - trial
        - revenue
      properties:
        description: internal or custom properties
        type: array
        items: {}
      apis:
        description: An API facade (and an API proxy configuration) which will be
          deployed in the environment(s)
        type: string
        format: uri
        x-interface: '#/x-interfaces/Organization.apis'
      environments:
        description: An environment represents a set of running components accessible
          at a single namespace
        type: string
        format: uri
        x-interface: '#/x-interfaces/Organization.environments'
      apiproducts:
        description: An API product which represents one or more REST endpoints
        type: string
        format: uri
        x-interface: '#/x-interfaces/Organization.apiproducts'
      apps:
        description: Apps are API consumers registered with an API provider's organization.
          Apps are registered with an organization to obtain credentials that enable
          access to one or more API products (or, a set of URIs). The default app
          profile can be extended by using custom attributes. Apps can be associated
          with developers (as developer apps) or with companies (company apps).
        type: string
        format: uri
        x-interface: '#/x-interfaces/Organization.apps'
      companies:
        description: A company is a collection of developers managed as a single entity.
          A company can be any grouping that is appropriate to your organization,
          e.g., business unit, product line, or division. Grouping developers into
          companies is useful when your goal is to work with multiple developers associated
          under a single corporate entity for billing purposes, for example. However,
          it not required that the developers in your organization are associated
          with a company. This API is completely optional. Note that a developer is
          always a single entity, uniquely identified by the email element.
        type: string
        format: uri
        x-interface: '#/x-interfaces/Organization.companies'
    x-interface: '#/x-interfaces/Organization'
  Proxy:
    description: 'An API facade (and an API proxy configuration) which will be deployed
      in the environment(s)

      '
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "Proxy"
        type: string
        enum:
        - Proxy
      name:
        description: 'The name of the API

          '
        type: string
    x-interface: '#/x-interfaces/Proxy'
  Environment:
    description: 'An environment represents a set of running components accessible
      at a single namespace

      '
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "ENVIRONMENT"
        type: string
        enum:
        - Environment
      name:
        description: 'The name of the Environment. Must be unique within the pertaining
          Organization

          '
        type: string
      description:
        description: 'A textual description of the Environment

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this Environment.
          Used in the UI.

          '
        type: string
      properties:
        description: A list of properties
        type: array
        items: {}
    x-interface: '#/x-interfaces/Environment'
  ApiProduct:
    description: 'API products enable you to bundle and distribute your APIs to multiple
      developer groups simultaneously, without having to modify code. An API product
      consists of a list of API resources (URIs) combined with a Service Plan (rate-limiting
      policy settings) plus any custom metadata required by the API provider. API
      products provide the basis for access control in Apigee, since they provide
      control over the set of API resources that apps are allowed to consume.

      '
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "APIPRODUCT"
        type: string
        enum:
        - ApiProduct
      name:
        description: 'The name of the API product. Must be unique within the pertaining
          Organization

          '
        type: string
      description:
        description: 'A textual description of the API Product

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this API Product.
          Used in the UI.

          '
        type: string
      organization:
        description: The name of the Organization (URL would have been better)
        type: string
      attributes:
        description: A list of custom key/value pair
        type: array
        items:
          $ref: '#/definitions/Attribute'
      apiResources:
        description: A comma separated list of API resources to be bundled in the
          API Product.
        type: array
        items:
          type: string
      environments:
        description: Names of environments where this API is available. Defines the
          domain names where the paths of the API will be available
        type: array
        items:
          type: string
      scopes:
        description: 'A comma separated list of scopes. These must map to the scopes
          defined in an Oauth policy associated with the API Product. Any scope mismatch
          between an Acces Token presented and the API Product results in auth failure.

          '
        type: array
        items:
          type: string
      proxies:
        description: Name of an API facade (and an API proxy configuration) which
          will be deployed in the environment(s)
        type: array
        items:
          type: string
      quota:
        description: The number of request messages permitted by this API product
          for the specified quotaInterval and quotaTimeUnit
        $ref: '#/definitions/Quota'
      approvalType:
        description: If manual, consumer key is generated and returned in 'pending'
          state. If auto consumer key generated and returned in 'Approved' state
        type: string
        enum:
        - manual
        - auto
      appCredentials:
        description: A list of token keys for an app
        type: array
        items:
          $ref: '#/definitions/AppCredential'
    x-interface: '#/x-interfaces/ApiProduct'
  App:
    description: 'Apps are API consumers registered with an API provider''s organization.
      Apps are registered with an organization to obtain credentials that enable access
      to one or more API products (or, a set of URIs). The default app profile can
      be extended by using custom attributes. Apps can be associated with developers
      (as developer apps) or with companies (company apps).

      '
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "APP"
        type: string
        enum:
        - App
      appId:
        description: uniquely generated ID
        type: string
      name:
        description: 'The name of the App. Must be unique within the pertaining Organization

          '
        type: string
      organization:
        description: The name of the Organization the App is in
        type: string
      accessType:
        type: string
      callbackUrl:
        type: string
        format: uri
      status:
        description: status of an App
        type: string
        enum:
        - approved
        - revoked
        - pending
      appFamily:
        description: 'App families enable you to create functional groups of apps.
          A single app may be instantiated in several forms. For example, an app may
          have sandbox instance and a production instance. App families enable these
          app instances to be associated. You can do this by linking the instances
          of the app together in a an app family collection. Specify an app family
          name, associate that name with a developer or a company of your organization,
          and select one or more app IDs to add to the contents of the app family.
          You can create app families for developer apps or for company apps within
          your organization.

          '
        type: string
      appType:
        description: A type relfects whether this belongs to Company or Developer
        type: string
        enum:
        - Company
        - Developer
      appParent:
        description: The name of the parent app
        type: string
      attributes:
        description: A list of custom key/value pair
        type: array
        items:
          $ref: '#/definitions/Attribute'
      scopes:
        description: 'Defines the OAUTH scopes to which this APIProduct gives access

          '
        type: array
        items:
          type: string
      appCredentials:
        type: array
        items:
          $ref: '#/definitions/AppCredential'
    x-interface: '#/x-interfaces/App'
  AppCredential:
    description: A token key for an app
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "APPCRENDENTIAL"
        type: string
        enum:
        - AppCredential
      id:
        description: a unique identifier
        type: string
      consumerKey:
        description: a key or client ID for Oauth
        type: string
      consumerSecret:
        description: a client secret for Oauth
        type: string
      apiProduct:
        description: A list of names of ApiProducts
        type: array
        items:
          type: string
  Company:
    description: 'A company is a collection of developers managed as a single entity.
      A company can be any grouping that is appropriate to your organization, e.g.,
      business unit, product line, or division. Grouping developers into companies
      is useful when your goal is to work with multiple developers associated under
      a single corporate entity for billing purposes, for example. However, it not
      required that the developers in your organization are associated with a company.
      This API is completely optional. Note that a developer is always a single entity,
      uniquely identified by the email element.

      '
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "COMPANY"
        type: string
        enum:
        - Company
      organization:
        description: The name of the organization that this company consumes products
          from
        type: string
      name:
        description: A name of the Company
        type: string
      displayName:
        description: 'The name to be used to display to humans for this API Product.
          Used in the UI.

          '
        type: string
      status:
        description: status
        type: string
        enum:
        - active
        - inactive
        - login_lock
      apps:
        description: A list of names of apps that belongs to this company
        type: array
        items:
          description: The name of the app. Better would be to put the URL of the
            app
          type: string
      developers:
        description: A list of names of developers that belongs to this company
        type: array
        items:
          description: The name of the developer. Better would be to put the URL of
            the developer
          type: string
      attributes:
        description: A list of custom key/value pair
        type: array
        items:
          $ref: '#/definitions/Attribute'
    x-interface: '#/x-interfaces/Company'
  Developer:
    description: 'A developer within an organization who is associated with a company.
      The company developer creates apps on behalf of the company, and any apps created
      by a company developer are associated with the company and known as ''company
      apps''. The Company Developers API enables you to add developers to companies.
      A developer must exist in the system before you can associate them with a company.

      '
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "DEVELOPER"
        type: string
        enum:
        - Developer
      userId:
        description: A unique identifier
        type: string
      organization:
        description: The name of the organization the developer consumes products
          from
        type: string
      userName:
        description: user name
        type: string
      firstName:
        description: first name
        type: string
      lastName:
        description: last name
        type: string
      email:
        description: email
        type: string
      encryptedPassword:
        description: hashed password
        type: string
      salt:
        description: the salt for the password
        type: string
      status:
        description: status
        type: string
        enum:
        - active
        - inactive
        - login_lock
      apps:
        description: A list of apps created by this developer
        type: array
        items:
          description: The name of the App. Better would be to put the URL of the
            App
          type: string
      companies:
        description: A list of companies this developer belongs to
        type: array
        items:
          description: The name of the Company. Better would be to put the URL of
            the Company
          type: string
      attributes:
        description: A list of custom key/value pair
        type: array
        items:
          $ref: '#/definitions/Attribute'
  Quota:
    description: Defines the quota of requests allowed by this APIProduct
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "Quota"
        type: string
        enum:
        - Quota
      quota:
        description: A name of a quota
        type: string
      quotaInterval:
        description: An interval for a quota
        type: integer
      quotaTimeUnit:
        description: A time unit for a quota
        type: string
        enum:
        - second
        - minute
        - hour
        - day
        - month
  PersistentResource:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      created:
        description: The date and time that the resource was created. An ISO-format
          string.
        type: string
        format: date-time
        readOnly: true
      creator:
        description: The identity of the creator of the resource. A URL.
        type: string
        format: uri
        readOnly: true
      modified:
        description: The date and time of the last modification to the resource. An
          ISO-format string.
        type: string
        format: date-time
        readOnly: true
      modifier:
        description: The identity of the user that made the last modification to the
          resource.
        type: string
        format: date-time
        readOnly: true
  MultiValuedRelationship:
    readOnly: true
    x-oneOf:
    - $ref: '#/definitions/Collection'
    - $ref: '#/definitions/Page'
  Attribute:
    description: A key value pair
    properties:
      kind:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "Attribute"
        type: string
        enum:
        - Attribute
      name:
        description: name of a property
        type: string
      value:
        description: value of a property
        type: string
  Collection:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      kind:
        type: string
        enum:
        - Collection
      items:
        type: array
        items:
          type: object
    readOnly: true
  Resource:
    type: object
    properties:
      self:
        description: "The self property defines which resource's property-value pairs\
          \ are in the data. On create, if no value for self is given, self will be\
          \ set to the URL of the resource being created. It is possible to set a\
          \ different value on create\u2014this is used to create a resource that\
          \ contans information about a different resource than itself. self specifies\
          \ RDF's 'subject' concept. It is similar to the @id property of RDF/JSON.\
          \ It is permissible, although unusual, to update the value of self.\n"
        type: string
        format: uri
      kind:
        description: "Specifies the type of the entity. We avoid the word type because\
          \ it's a global function in some programing languages, and we don't want\
          \ name collisions. Kind is usually set by the  client and then echo'd by\
          \ the server. In most applications, kind is immutable after create, although\
          \ some applications may allow change. \n"
        type: string
  Page:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      kind:
        type: string
        enum:
        - Page
      items:
        type: array
        items:
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
      previous_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
    readOnly: true
    x-interface: common.yaml#/x-interfaces/Page
x-interfaces:
  ApiProduct:
    get:
      description: Retrieve an ApiProduct
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/ApiProduct'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an ApiProduct entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the ApiProduct being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/ApiProduct'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/ApiProduct'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete an ApiProduct
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/ApiProduct'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: ApiProduct
  Apigee:
    get:
      description: Retrieve an Apigee
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Apigee'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an Apigee entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Apigee being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Apigee'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Apigee'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee
  Apigee.organizations:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Organization
      parameters:
      - description: The representation of the new Organization being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Organization'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Organization
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Organization
              type: string
          schema:
            $ref: '#/definitions/Organization'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.organizations
  App:
    get:
      description: Retrieve an App
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/App'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an App entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the App being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/App'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/App'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete an App
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/App'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: App
  Company:
    get:
      description: Retrieve a Company
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Company'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Company entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Company being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Company'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Company'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Company
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Company'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Company
  Environment:
    get:
      description: Retrieve an Environment
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Environment'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an Environment entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Environment being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Environment'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Environment'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete an Environment
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Environment'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Environment
  Organization: &Organization
    get:
      description: Retrieve an Organization
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Organization'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an Organization entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Organization being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Organization'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Organization'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete an Organization
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Organization'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Organization
  Organization.apiproducts: &Organization-apiproducts
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new ApiProduct
      parameters:
      - description: The representation of the new ApiProduct being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/ApiProduct'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new ApiProduct
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created ApiProduct
              type: string
          schema:
            $ref: '#/definitions/ApiProduct'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Organization.apiproducts
  Organization.apis: &Organization-apis
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Proxy
      parameters:
      - description: The representation of the new Proxy being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Proxy'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Proxy
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Proxy
              type: string
          schema:
            $ref: '#/definitions/Proxy'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Organization.apis
  Organization.apps: &Organization-apps
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new App
      parameters:
      - description: The representation of the new App being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/App'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new App
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created App
              type: string
          schema:
            $ref: '#/definitions/App'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Organization.apps
  Organization.companies: &Organization-companies
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Company
      parameters:
      - description: The representation of the new Company being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Company'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Company
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Company
              type: string
          schema:
            $ref: '#/definitions/Company'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Organization.companies
  Organization.environments: &Organization-environments
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Environment
      parameters:
      - description: The representation of the new Environment being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Environment'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Environment
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Environment
              type: string
          schema:
            $ref: '#/definitions/Environment'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Organization.environments
  Proxy:
    get:
      description: Retrieve a Proxy
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Proxy'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Proxy entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Proxy being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Proxy'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Proxy'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Proxy
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Proxy'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Proxy
x-templates:
  '{Apigee-URL}':
    $ref: '#/x-interfaces/Apigee'
  '{Apigee-URL}/organizations':
    $ref: '#/x-interfaces/Apigee.organizations'
  '{Apigee-URL}/organizations/{name}':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Organization
  '{Apigee-URL}/organizations/{name}/apiproducts':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Organization-apiproducts
  '{Apigee-URL}/organizations/{name}/apis':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Organization-apis
  '{Apigee-URL}/organizations/{name}/apps':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Organization-apps
  '{Apigee-URL}/organizations/{name}/companies':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Organization-companies
  '{Apigee-URL}/organizations/{name}/environments':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Organization-environments
paths:
  /:
    $ref: '#/x-templates/{Apigee-URL}'
  /organizations:
    $ref: '#/x-templates/{Apigee-URL}~1organizations'
  /organizations/{name}:
    $ref: '#/x-templates/{Apigee-URL}~1organizations~1{name}'
  /organizations/{name}/apis:
    $ref: '#/x-templates/{Apigee-URL}~1organizations~1{name}~1apis'
  /organizations/{name}/environments:
    $ref: '#/x-templates/{Apigee-URL}~1organizations~1{name}~1environments'
  /organizations/{name}/apiproducts:
    $ref: '#/x-templates/{Apigee-URL}~1organizations~1{name}~1apiproducts'
  /organizations/{name}/apps:
    $ref: '#/x-templates/{Apigee-URL}~1organizations~1{name}~1apps'
  /organizations/{name}/companies:
    $ref: '#/x-templates/{Apigee-URL}~1organizations~1{name}~1companies'
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  Access-Control-Request-Headers:
    description: specifies the custom headers the client wishes to use
    in: header
    name: Access-Control-Request-Headers
    required: true
    type: string
  Access-Control-Request-Method:
    description: specifies the method the client wishes to use
    in: header
    name: Access-Control-Request-Method
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
responses:
  '303':
    description: See other. Server is redirecting client to a different resource
    headers:
      Location:
        description: URL of other resource
        type: string
  '400':
    description: Bad Request. Client request in error
    schema: {}
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema: {}
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema: {}
  '404':
    description: Not Found. Resource not found
    schema: {}
  '406':
    description: Not Acceptable. Requested media type not available
    schema: {}
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema: {}
  default:
    description: 5xx errors and other stuff
    schema: {}
  options_200:
    description: successful
    headers:
      Access-Control-Allow-Headers:
        description: headers allowed
        type: string
      Access-Control-Allow-Methods:
        description: methods allowed
        type: string
      Access-Control-Allow-Origin:
        description: origins allowed
        type: string
      Access-Control-Max-Age:
        description: length of time response can be cached
        type: string
  standard_200:
    description: successful
    headers:
      Content-Location:
        description: perma-link URL of resource
        type: string
      Content-Type:
        description: The media type of the returned body
        type: string
      ETag:
        description: this value must be echoed in the If-Match header of every PATCH
          or PUT
        type: string

