swagger: '2.0'
info:
  title: PropertyTrackerAPI
  version: '0.1'
consumes:
- application/json
produces:
- application/json
- text/html
definitions:
  PropertyTracker:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      dogs:
        description: URL of a Collection of Dogs
        format: uri
        type: string
        x-rapier-relationship:
          collection_resource: '#Collection'
          entities: '#Dog'
          multiplicity: O:n
      people:
        description: URL of a Collection of Persons
        format: uri
        type: string
        x-rapier-relationship:
          collection_resource: '#Collection'
          entities: '#Person'
          multiplicity: O:n
      bicycles:
        description: URL of a Collection of Bicycles
        format: uri
        type: string
        x-rapier-relationship:
          collection_resource: '#Collection'
          entities: '#Bicycle'
          multiplicity: O:n
      institutions:
        description: URL of a Collection of Institutions
        format: uri
        type: string
        x-rapier-relationship:
          collection_resource: '#Collection'
          entities: '#Institution'
          multiplicity: O:n
    readOnly: true
  Dog:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      name:
        type: string
      birth_date:
        type: string
      fur_color:
        type: string
      owner:
        description: URL of a Person or Institution
        format: uri
        type: string
        x-rapier-relationship:
          entities: '#Person #Institution'
  Bicycle:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      name:
        type: string
      purchase_date:
        type: string
      paint_color:
        type: string
      owner:
        description: URL of a Person or Institution
        format: uri
        type: string
        x-rapier-relationship:
          entities: '#Person #Institution'
  Person:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      name:
        type: string
      birth-date:
        type: string
      possessions:
        description: URL of a Collection of Dogs and Bicycles
        format: uri
        type: string
        x-rapier-relationship:
          collection_resource: '#Collection'
          entities: '#Dog #Bicycle'
          multiplicity: 0:n
  Institution:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      name:
        type: string
      foundation-date:
        type: string
      assets:
        description: URL of a Collection of Dogs and Bicycles
        format: uri
        type: string
        x-rapier-relationship:
          collection_resource: '#Collection'
          entities: '#Dog #Bicycle'
          multiplicity: 0:n
  Resource:
    type: object
    properties:
      self:
        type: string
        readOnly: true
      kind:
        type: string
  PersistentResource:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      created:
        type: string
        format: date-time
        readOnly: true
      creator:
        type: string
        format: URL
        readOnly: true
      modified:
        type: string
        format: date-time
        readOnly: true
      modifier:
        type: string
        format: date-time
        readOnly: true
  Collection:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      kind:
        type: string
        enum:
        - Collection
      items:
        type: array
        items:
          type: object
    readOnly: true
paths:
  /:
    $ref: '#/x-interfaces/{PropertyTracker_URL}'
  /dogs:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1dogs'
  /dogs;{name}:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1dogs;{name}'
  /dogs;{name}/owner:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1dogs;{name}~1owner'
  /people:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1people'
  /people;{name}:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1people;{name}'
  /people;{name}/possessions:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1people;{name}~1possessions'
  /bicycles:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1bicycles'
  /bicycles;{name}:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1bicycles;{name}'
  /bicycles;{name}/owner:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1bicycles;{name}~1owner'
  /institutions:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1institutions'
  /institutions;{name}:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1institutions;{name}'
  /institutions;{name}/assets:
    $ref: '#/x-interfaces/{PropertyTracker_URL}~1institutions;{name}~1assets'
x-interfaces:
  '{PropertyTracker_URL}':
    get:
      description: Retrieve a PropertyTracker
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/PropertyTracker'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: PropertyTracker-interface
  '{PropertyTracker_URL}/dogs':
    get:
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
          schema:
            $ref: '#/definitions/Collection'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Dog
      parameters:
      - description: The representation of the new Dog being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Dog'
      responses:
        '201':
          description: Created new Dog
          headers:
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Dog
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: PropertyTracker-dogs-interface
  '{PropertyTracker_URL}/people':
    get:
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
          schema:
            $ref: '#/definitions/Collection'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Person
      parameters:
      - description: The representation of the new Person being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Person'
      responses:
        '201':
          description: Created new Person
          headers:
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Person
              type: string
          schema:
            $ref: '#/definitions/Person'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: PropertyTracker-people-interface
  '{PropertyTracker_URL}/bicycles':
    get:
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
          schema:
            $ref: '#/definitions/Collection'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Bicycle
      parameters:
      - description: The representation of the new Bicycle being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Bicycle'
      responses:
        '201':
          description: Created new Bicycle
          headers:
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Bicycle
              type: string
          schema:
            $ref: '#/definitions/Bicycle'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: PropertyTracker-bicycles-interface
  '{PropertyTracker_URL}/institutions':
    get:
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
          schema:
            $ref: '#/definitions/Collection'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Institution
      parameters:
      - description: The representation of the new Institution being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Institution'
      responses:
        '201':
          description: Created new Institution
          headers:
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Institution
              type: string
          schema:
            $ref: '#/definitions/Institution'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: PropertyTracker-institutions-interface
  '{Dog_URL}': &Dog-interface
    get:
      description: Retrieve a Dog
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Dog entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Dog being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Dog'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Dog
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Dog'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Dog-interface
  '{Bicycle_URL}': &Bicycle-interface
    get:
      description: Retrieve a Bicycle
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Bicycle'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Bicycle entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Bicycle being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Bicycle'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Bicycle'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Bicycle
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Bicycle'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Bicycle-interface
  '{Person_URL}': &Person-interface
    get:
      description: Retrieve a Person
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Person'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Person entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Person being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Person'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Person'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Person
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Person'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Person-interface
  '{Person_URL}/possessions': &Person-possessions-interface
    get:
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
          schema:
            $ref: '#/definitions/Collection'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Dog or Bicycle
      parameters:
      - description: The representation of the new Dog or Bicycle being created
        in: body
        name: body
        schema:
          x-oneOf:
          - $ref: '#/definitions/Dog'
          - $ref: '#/definitions/Bicycle'
      responses:
        '201':
          description: Created new Dog or Bicycle
          headers:
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Dog or Bicycle
              type: string
          schema:
            x-oneOf:
            - $ref: '#/definitions/Dog'
            - $ref: '#/definitions/Bicycle'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Person-possessions-interface
  '{Institution_URL}': &Institution-interface
    get:
      description: Retrieve an Institution
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Institution'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an Institution entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Institution being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Institution'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Institution'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete an Institution
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Institution'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Institution-interface
  '{Institution_URL}/assets': &Institution-assets-interface
    get:
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
          schema:
            $ref: '#/definitions/Collection'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Dog or Bicycle
      parameters:
      - description: The representation of the new Dog or Bicycle being created
        in: body
        name: body
        schema:
          x-oneOf:
          - $ref: '#/definitions/Dog'
          - $ref: '#/definitions/Bicycle'
      responses:
        '201':
          description: Created new Dog or Bicycle
          headers:
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Dog or Bicycle
              type: string
          schema:
            x-oneOf:
            - $ref: '#/definitions/Dog'
            - $ref: '#/definitions/Bicycle'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Institution-assets-interface
  '{PropertyTracker_URL}/dogs;{name}':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Dog-interface
  '{PropertyTracker_URL}/dogs;{name}/owner':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Person-interface
  '{PropertyTracker_URL}/people;{name}':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Person-interface
  '{PropertyTracker_URL}/people;{name}/possessions':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Person-possessions-interface
  '{PropertyTracker_URL}/bicycles;{name}':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Bicycle-interface
  '{PropertyTracker_URL}/bicycles;{name}/owner':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Person-interface
  '{PropertyTracker_URL}/institutions;{name}':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Institution-interface
  '{PropertyTracker_URL}/institutions;{name}/assets':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Institution-assets-interface
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  Access-Control-Request-Headers:
    description: specifies the custom headers the client wishes to use
    in: header
    name: Access-Control-Request-Headers
    required: true
    type: string
  Access-Control-Request-Method:
    description: specifies the method the client wishes to use
    in: header
    name: Access-Control-Request-Method
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
responses:
  '303':
    description: See other. Server is redirecting client to a different resource
    headers:
      Location:
        description: URL of other resource
        type: string
  '400':
    description: Bad Request. Client request in error
    schema: {}
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema: {}
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema: {}
  '404':
    description: Not Found. Resource not found
    schema: {}
  '406':
    description: Not Acceptable. Requested media type not available
    schema: {}
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema: {}
  default:
    description: 5xx errors and other stuff
    schema: {}
  options_200:
    description: successful
    headers:
      Access-Control-Allow-Headers:
        description: headers allowed
        type: string
      Access-Control-Allow-Methods:
        description: methods allowed
        type: string
      Access-Control-Allow-Origin:
        description: origins allowed
        type: string
      Access-Control-Max-Age:
        description: length of time response can be cached
        type: string
  standard_200:
    description: successful
    headers:
      Content-Location:
        description: perma-link URL of resource
        type: string
      ETag:
        description: this value must be echoed in the If-Match header of every PATCH
          or PUT
        type: string

