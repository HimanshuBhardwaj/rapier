x-description: '*** This document is not a specification of an API. This document
  includes implementation-specific additions and modifications to an API that are
  designed to aid implementation-aware software like proxies and implementation frameworks.
  If you are looking for the API specification, find the version that was generated
  without implementation extensions and modifications'
swagger: '2.0'
info:
  title: Doc Store API
  version: '0.1'
consumes:
- application/json
produces:
- application/json
- text/html
securityDefinitions:
  sso:
    type: oauth2
    scopes: {}
    flow: application
    tokenUrl: whatever
security:
- sso: []
definitions:
  ErrorResponse:
    type: string
  Store:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      kind:
        type: string
        enum:
        - Store
      home:
        description: URL of the current user's 'home' Folder
        format: uri
        type: string
        x-rapier-relationship: '#Folder'
      sharedWithMe:
        description: URL of a Collection of Folders and Docs
        format: uri
        type: string
        x-rapier-relationship:
          collection_resource: '#MultiValuedRelationshipResource'
          entities: '#Folder #Doc'
          multiplicity: O:n
          readOnly: true
      docs:
        description: URL of a Collection of Docs
        format: uri
        type: string
        x-rapier-relationship:
          collection_resource: '#MultiValuedRelationshipResource'
          entities: '#Doc'
          multiplicity: O:n
      folders:
        description: URL of a Collection of Folders
        format: uri
        type: string
        x-rapier-relationship:
          collection_resource: '#MultiValuedRelationshipResource'
          entities: '#Folder'
          multiplicity: O:n
      groups:
        description: URL of a Collection of Groups
        format: uri
        type: string
        x-rapier-relationship:
          collection_resource: '#MultiValuedRelationshipResource'
          entities: '#Group'
          multiplicity: O:n
    readOnly: true
  Folder:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      contents:
        description: URL of a Collection of Docs and Folders
        format: uri
        readOnly: true
        type: string
        x-rapier-relationship:
          collection_resource: '#MultiValuedRelationshipResource'
          entities: '#Doc #Folder'
          multiplicity: O:n
      folder:
        description: URL of a Folder
        format: uri
        type: string
        x-rapier-relationship: '#Folder'
      kind:
        type: string
        enum:
        - Folder
      name:
        type: string
      permissions:
        type: array
        items:
          properties:
            actor:
              format: URL
              type: string
            action:
              type: string
  Doc:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      content_type:
        description: The media type of the content of the Doc
        type: string
      content:
        description: URL of a Content
        format: uri
        type: string
        x-rapier-relationship: '#Content'
      folder:
        description: URL of a Folder
        format: uri
        type: string
        x-rapier-relationship: '#Folder'
      kind:
        type: string
        enum:
        - Doc
      name:
        type: string
      permissions:
        type: array
        items:
          properties:
            actor:
              format: URL
              type: string
            action:
              type: string
  Group:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      members:
        description: Array of URLs of Users
        type: array
        items:
          type: string
          format: uri
      folder:
        description: URL of a Folder
        format: uri
        type: string
        x-rapier-relationship: '#Folder'
      kind:
        type: string
        enum:
        - Group
      name:
        type: string
      permissions:
        type: array
        items:
          properties:
            actor:
              format: URL
              type: string
            action:
              type: string
  Content:
    type: string
  Page:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      kind:
        type: string
        enum:
        - Page
      items:
        type: array
        items:
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        x-rapier-relationship:
          entities: '#Page'
          readOnly: true
      previous_page:
        type: string
        format: uri
        x-rapier-relationship:
          entities: '#Page'
          readOnly: true
    readOnly: true
  Collection:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      kind:
        type: string
        enum:
        - Collection
      items:
        type: array
        items:
          type: object
    readOnly: true
  MultiValuedRelationshipResource:
    readOnly: true
    x-oneOf:
    - $ref: '#/definitions/Collection'
    - $ref: '#/definitions/Page'
  Resource:
    type: object
    properties:
      self:
        type: string
        readOnly: true
      kind:
        type: string
  PersistentResource:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      created:
        type: string
        format: date-time
        readOnly: true
      creator:
        type: string
        format: URL
        readOnly: true
      modified:
        type: string
        format: date-time
        readOnly: true
      modifier:
        type: string
        format: date-time
        readOnly: true
x-interfaces:
  Store:
    get:
      description: Retrieve a Store
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Store'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Store
  Store.sharedWithMe:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationshipResource'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Store.sharedWithMe
  Store.docs:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationshipResource'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Doc
      parameters:
      - description: The representation of the new Doc being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Doc'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Doc
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Doc
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Doc'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Store.docs
  Store.folders:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationshipResource'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Folder
      parameters:
      - description: The representation of the new Folder being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Folder'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Folder
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Folder
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Folder'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Store.folders
  Store.groups:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationshipResource'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Group
      parameters:
      - description: The representation of the new Group being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Group'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Group
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Group
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Group'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Store.groups
  Folder: &Folder
    get:
      description: Retrieve a Folder
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Folder'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Folder entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Folder being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Folder'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Folder'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Folder
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Folder'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Folder
  Folder.contents: &Folder-contents
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationshipResource'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Doc or Folder
      parameters:
      - description: The representation of the new Doc or Folder being created
        in: body
        name: body
        schema:
          x-oneOf:
          - $ref: '#/definitions/Doc'
          - $ref: '#/definitions/Folder'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Doc or Folder
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Doc or Folder
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            x-oneOf:
            - $ref: '#/definitions/Doc'
            - $ref: '#/definitions/Folder'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Folder.contents
  Doc: &Doc
    get:
      description: Retrieve a Doc
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Doc'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Doc entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Doc being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Doc'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Doc'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Doc
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Doc'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Doc
  Group: &Group
    get:
      description: Retrieve a Group
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Group'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Group entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Group being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Group'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Group'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Group
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Group'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Group
  Content: &Content
    get:
      description: Retrieve a Content
      parameters:
      - $ref: '#/parameters/Accept'
      produces:
      - application/x-yaml
      - text/yaml
      - text/html
      - text/plain
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Content'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    put:
      consumes:
      - application/x-yaml
      - text/yaml
      - text/html
      - text/plain
      description: Create or Update a Content entity
      parameters:
      - $ref: '#/parameters/Put-If-Match'
      - description: The representation of the Content being replaced
        in: body
        name: body
        schema:
          $ref: '#/definitions/Content'
      produces:
      - application/x-yaml
      - text/yaml
      - text/html
      - text/plain
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Content'
        '201':
          description: Created new Content
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            Location:
              description: perma-link URL of newly-created Content
              type: string
          schema:
            $ref: '#/definitions/Content'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Content
      produces:
      - application/x-yaml
      - text/yaml
      - text/html
      - text/plain
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Content'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Content
  Page:
    get:
      description: Retrieve a Page
      parameters:
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Page'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Page
x-templates:
  '{Store-URL}':
    $ref: '#/x-interfaces/Store'
  '{Folder-URL}':
    $ref: '#/x-interfaces/Folder'
  '{Doc-URL}':
    $ref: '#/x-interfaces/Doc'
  '{Group-URL}':
    $ref: '#/x-interfaces/Group'
  '{Content-URL}':
    $ref: '#/x-interfaces/Content'
  '{Page-URL}':
    $ref: '#/x-interfaces/Page'
  '{Store-URL}/home':
    $ref: '#/x-interfaces/Folder'
  '{Store-URL}/home/contents':
    $ref: '#/x-interfaces/Folder.contents'
  '{Store-URL}/sharedWithMe':
    $ref: '#/x-interfaces/Store.sharedWithMe'
  '{Store-URL}/docs':
    $ref: '#/x-interfaces/Store.docs'
  '{Store-URL}/folders':
    $ref: '#/x-interfaces/Store.folders'
  '{Store-URL}/groups':
    $ref: '#/x-interfaces/Store.groups'
  '{Folder-URL}/contents':
    $ref: '#/x-interfaces/Folder.contents'
  '{Doc-URL}/content':
    $ref: '#/x-interfaces/Content'
paths:
  /store:
    $ref: '#/x-templates/{Store-URL}'
  /store/home:
    $ref: '#/x-templates/{Store-URL}~1home'
  /store/home/contents:
    $ref: '#/x-templates/{Store-URL}~1home~1contents'
  /store/sharedWithMe:
    $ref: '#/x-templates/{Store-URL}~1sharedWithMe'
  /store/docs:
    $ref: '#/x-templates/{Store-URL}~1docs'
  /store/folders:
    $ref: '#/x-templates/{Store-URL}~1folders'
  /store/groups:
    $ref: '#/x-templates/{Store-URL}~1groups'
  /c3Rvc-Zmxk-{implementation_key}:
    x-description: '*** This path is not part of the API - it is an implementation-private
      extension'
    parameters:
    - description: This parameter is a private part of the implementation. It is not
        part of the API
      in: path
      name: implementation_key
      required: true
      type: integer
    <<: *Folder
  /c3Rvc-Zmxk-{implementation_key}/contents:
    x-description: '*** This path is not part of the API - it is an implementation-private
      extension'
    parameters:
    - description: This parameter is a private part of the implementation. It is not
        part of the API
      in: path
      name: implementation_key
      required: true
      type: integer
    <<: *Folder-contents
  /c3Rvc-ZG9j-{implementation_key}:
    x-description: '*** This path is not part of the API - it is an implementation-private
      extension'
    parameters:
    - description: This parameter is a private part of the implementation. It is not
        part of the API
      in: path
      name: implementation_key
      required: true
      type: integer
    <<: *Doc
  /c3Rvc-ZG9j-{implementation_key}/content:
    x-description: '*** This path is not part of the API - it is an implementation-private
      extension'
    parameters:
    - description: This parameter is a private part of the implementation. It is not
        part of the API
      in: path
      name: implementation_key
      required: true
      type: integer
    <<: *Content
  /c3Rvc-Z3Jw-{implementation_key}:
    x-description: '*** This path is not part of the API - it is an implementation-private
      extension'
    parameters:
    - description: This parameter is a private part of the implementation. It is not
        part of the API
      in: path
      name: implementation_key
      required: true
      type: integer
    <<: *Group
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  Access-Control-Request-Headers:
    description: specifies the custom headers the client wishes to use
    in: header
    name: Access-Control-Request-Headers
    required: true
    type: string
  Access-Control-Request-Method:
    description: specifies the method the client wishes to use
    in: header
    name: Access-Control-Request-Method
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
  Put-If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: false
    type: string
responses:
  '303':
    description: See other. Server is redirecting client to a different resource
    headers:
      Location:
        description: URL of other resource
        type: string
  '400':
    description: Bad Request. Client request in error
    schema:
      $ref: '#/definitions/ErrorResponse'
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema:
      $ref: '#/definitions/ErrorResponse'
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema:
      $ref: '#/definitions/ErrorResponse'
  '404':
    description: Not Found. Resource not found
    schema:
      $ref: '#/definitions/ErrorResponse'
  '406':
    description: Not Acceptable. Requested media type not available
    schema:
      $ref: '#/definitions/ErrorResponse'
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema:
      $ref: '#/definitions/ErrorResponse'
  default:
    description: 5xx errors and other stuff
    schema:
      $ref: '#/definitions/ErrorResponse'
  options_200:
    description: successful
    headers:
      Access-Control-Allow-Headers:
        description: headers allowed
        type: string
      Access-Control-Allow-Methods:
        description: methods allowed
        type: string
      Access-Control-Allow-Origin:
        description: origins allowed
        type: string
      Access-Control-Max-Age:
        description: length of time response can be cached
        type: string
  standard_200:
    description: successful
    headers:
      Content-Location:
        description: perma-link URL of resource
        type: string
      Content-Type:
        description: The media type of the returned body
        type: string
      ETag:
        description: this value must be echoed in the If-Match header of every PATCH
          or PUT
        type: string

