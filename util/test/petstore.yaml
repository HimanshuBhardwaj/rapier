title: Pet Store
entities:
  Store:
    wellKnownURLs: /store
    queryPaths: pets orders users
    properties:
      pets:
        type: string
        format: uri
        relationship:
          entities: '#Pet'
          multiplicity: n
          collectionResource: '#PetCollection'
      orders:
        type: string
        format: uri
        relationship:
          entities: '#Order'
          multiplicity: n
          collectionResource: '#Collection'
      users:
        type: string
        format: uri
        relationship:
          entities: '#User'
          multiplicity: n
          collectionResource: '#Collection'
      logins: #or is logsin ?
        description: POST a Login to log yourself in. You will get back the URL of a Session. DELETE the Session to log out 
        type: string
        format: uri
        relationship:
          entities: '#Session'
          multiplicity: n
          collectionResource: '#Collection'
          consumes:
            application/json: '#Login'
        readOnly: true
  Order:
    type: object
    properties:
      pet:
        type: string
        format: uri
        relationship: '#Pet'
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
  User:
    type: object
    properties:
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
      session:
        type: string
        format: uri
        relationship: '#Session'
  Image:
    type: string
  Pet:
    type: object
    required:
    - name
    properties:
      category:
        $ref: '#/entities/Category'
      name:
        type: string
        example: doggie
      tags:
        type: array
        items:
          $ref: '#/entities/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
        - available
        - pending
        - sold
      images:
        type: string
        format: uri
        relationship: 
          entities: '#Image'
          multiplicity: n
          collectionResource: '#Collection'
  Inventory:
    type: object
    additionalProperties:
      type: string
      format: uri
      relationship: '#Pet'
  Session:
    type: object
    properties:
      rate_limit:
        type: integer
      expires_after:
        type: string
        format: date-time
  Login:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  Collection:
    properties:
      items:
        type: array
        items: 
          type: object
    readOnly: true
  PetCollection:
    properties:
      items:
        type: array
        items: 
          $ref: '#/entities/Pet'
    queryParameters:
      tags:
        items:
          type: string
        type: array
        collectionFormat: multi
        required: false
      status:
        type: integer
        collectionFormat: multi
        required: false
    readOnly: true
