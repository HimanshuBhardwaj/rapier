title: Deployment Service API
version: "0.1"
consumes: application/json
produces: application/json text/html
conventions:
  patch_consumes: application/merge-patch+json
  error_response:
    type: string
entities:
  Environment:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        # The value of the kind property must always be the string "Environment". The kind property is always set by the server in responses to GET.
        # The kind property must be set by the client on POST, and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [Environment]
      realizes:
        # The value of the realizes property is the URI of the System of which this Environment is a running examplar. The realizes property is always set by the server in responses to GET.
        # The realizes property must be set by the client on POST, and must not be set by the client on PATCH. (PUT is not supported) 
        format: uri
        type: string
        relationship: '#System'
      comprises:
        # The value of the comprises property is the URI of the collection of Deployments that are part of this Environment. 
        # the comprises property is always set by the server, and is readOnly for the client 
        format: uri
        type: string
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#Deployment'
      domain_name:
        # The value of the domain_name property is the URI of the collection of Deployments that are part of this Environment. 
        # the comprises property is always set by the server, and is readOnly for the client 
        type: string
      description:
        type: string
      requested_state:
        type: string
        readOnly: true
        enum: [initial, started, stopped, retired]
      requests:
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#EnvironmentStartRequest #EnvironmentStopRequest #EnvironmentRetirementRequest'  
  Deployment:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [Deployment]
      deploys:
        format: uri
        type: string
        relationship: '#Revision'
      runs_in:
        format: uri
        type: string
        relationship: '#Environment'
      requested_state:
        type: string
        readOnly: true
        enum: [initial, started, stopped, offline, online, temporarily_online]
      requests:
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#DeploymentStartRequest #DeploymentStopRequest #DeploymentOnlineRequest #DeploymentOfflineRequest #DeploymentTemporarilyOnlineRequest #DeploymentScalingRequest #DeploymentRetirementRequest' 
  System:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [System]
      has_environments:
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#Environment'
      has_components:
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#Component'
  Component:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [Component]
      is_component_of:
        format: uri
        type: string
        relationship: '#System'
      has_revisions:
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#Revision'
  Revision:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [Revision]
      revises:
        format: uri
        type: string
        relationship: '#Component'
      has_deployments:
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#Deployment'        
  EnvironmentStartRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [EnvironmentStartRequest]    
  EnvironmentRetirementRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [EnvironmentStopRequest]    
  EnvironmentStopRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [EnvironmentStopRequest]    
  DeploymentStartRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [DeploymentStartRequest]    
      replicas:
        type: integer
  DeploymentStopRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [DeploymentStopRequest]    
  DeploymentOfflineRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [DeploymentOfflineRequest]    
  DeploymentOnlineRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [DeploymentOnlineRequest]    
  DeploymentTemporarilyOnlineRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [DeploymentTemporarilyOnlineRequest]
      traffic_percentage:
        type: integer
      duration:
        type: integer
      state:
        type: string
      results:
        type: string
        format: uri
        relationship: '#StatisticsResults'
    readOnly: true
  DeploymentScalingRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [DeploymentScalingRequest]  
      replicas: 
        type: integer
    readOnly: true
  DeploymentRetirementRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [DeploymentRetirementRequest]    
  StatisticsResults:
    type: object
    readOnly: true
  MultiValuedRelationship:
    oneOf:
    - $ref: '#/entities/Collection'
    - $ref: '#/entities/Page'      
  Collection:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Collection]
      items:
        type: array
        items: 
          type: object
    query_parameters:
    - name: properties
      items:
        type: string
      type: array
      required: false
    - name: limit
      type: integer
      minimum: 1
      maximum: 1000
      required: false
    - name: orderby
      type: string
    - name: direction
      type: string
      required: false
      enum: ['ascending', 'descending']
    readOnly: true
  Page:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Page]
      items:
        type: array
        items: 
          type: object
      collection:
        type: string
        format: uri
    query_parameters:
    - name: properties
      items:
        type: string
      type: array
      required: false
    - name: limit
      type: integer
      minimum: 1
      maximum: 1000
      required: false
    readOnly: true
  Resource:
    type: object
    properties:
      self:
        type: string
        readOnly: true
      kind:
        type: string
  PersistentResource:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      created:
        type: string
        format: date-time
        readOnly: true
      creator:
        type: string
        format: URL
        readOnly: true
      modified:
        type: string
        format: date-time
        readOnly: true
      modifier:
        type: string
        format: date-time
        readOnly: true
securityDefinitions:
  sso:
    type: oauth2
    scopes: {}
    flow: password
    tokenUrl: whatever
security:
- sso: []