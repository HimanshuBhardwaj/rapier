title: Deployment Service API
version: "0.1"
consumes: application/json
produces: application/json text/html
conventions:
  patch_consumes: application/merge-patch+json
  error_response:
    type: string
entities:
  Environment:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          The value must always be the string "Environment". This property is always set 
          by the server in responses to GET. It must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [Environment]
      realizes:
        description: >
          The the URI of the System of which this Environment is a running examplar. 
          This property is always set by the server in responses to GET.
          It must be set by the client on POST, and may only be set by the client on PATCH
          if the requested_state is initial. (PUT is not supported) 
        format: uri
        type: string
        relationship: '#System'
      comprises:
        description: >
          The URI of the collection of Deployments that are part of this Environment. 
          This property is always set by the server, and is readOnly for the client 
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#Deployment'
      domain_name:
        description: The URI of the domain name at which this Environment can be found. 
        type: string
      description:
        description: A description of the Environment 
        type: string
      requested_state:
        description: >
          The requested, or 'desired' state of the Environment. A string (URLs would be cooler) 
          representing the last requested state of the Deployment. This property is always set by 
          the server in responses to GET. It may never be set directly by the client. Clients affect 
          the value of requested_state by POSTing requests to the URL in the requests property. 
        type: string
        readOnly: true
        enum: [initial, started, stopped, retired]
      valid_requests:
        description: > 
          A list of valid requests given the current requested_state. This property is always set 
          by the server, and is readOnly for the client
        type: array
        readOnly: true
        items:
          type: string
          format: uri
          enum: [EnvironmentStartRequest, EnvironmentStopRequest, EnvironmentRetirementRequest]
      requests:
        description: >
          The  URI of the collection of Requests for this Environment. New requests can be POSTed 
          to this collection to change the requested (desired) state of the Environment.
          These requests will typically change the state of the runtime. Valid request types are:
          EnvironmentStartRequest EnvironmentStopRequest EnvironmentRetirementRequest 
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#EnvironmentStartRequest #EnvironmentStopRequest #EnvironmentRetirementRequest'  
  EnvironmentStartRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
         description: >
          This value must always be the string "EnvironmentStartRequest". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
       type: string
        enum: [EnvironmentStartRequest]    
  EnvironmentRetirementRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          This value must always be the string "EnvironmentStopRequest". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [EnvironmentStopRequest]    
  EnvironmentStopRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          This value must always be the string "EnvironmentStopRequest". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [EnvironmentStopRequest]    
  Deployment:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          This value must always be the string "Deployment". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [Deployment]
      deploys:
        description: >
          The URI of the Revision that the deployment executes. This property is always set by the 
          server in responses to GET. It must be set by the client on POST, and must not be set 
          by the client on PATCH. (PUT is not supported) 
        format: uri
        type: string
        relationship: '#Revision'
      runs_in:
        description: >
          The URI of the Environment that the deployment is part of. This property is always set by 
          the server in responses to GET. It must be set by the client on POST, and must not be set 
          by the client on PATCH. (PUT is not supported) 
        format: uri
        type: string
        relationship: '#Environment'
      requested_state:
        description: >
          The requested, or 'desired' state of the Deployment. The value is a string (URLs would be cooler) 
          representing the last requested state of the Deployment. This property is always set by the server 
          in responses to GET. It may never be set directly by the client. Clients affect the value of 
          requested_state by POSTing requests to the URL in the requests property. 
        type: string
        readOnly: true
        enum: [initial, started, stopped, offline, online, temporarily_online]
      requested_replicas:
        type: integer
        readOnly: true
      requested_hosts:
        type: string
        readOnly: true
      requested_percentage:
        type: number
        minimum: 0
        maximum: 100
        readOnly: true
      valid_requests:
        description:  > 
          A list of valid requests given the current requested_state. This property is always set 
          by the server, and is readOnly for the client
        type: array
        items:
          type: string
          format: uri
          enum: [DeploymentStartRequest, DeploymentStopRequest, DeploymentOnlineRequest, 
                 DeploymentOfflineRequest, DeploymentStatisticsRequest, 
                 DeploymentScalingRequest, DeploymentRetirementRequest]
      requests:
        description: >
          The URI of the collection of Requests for this Deployment. New requests can be POSTed to this 
          collection to change the requested (desired) state of the Deployment. These requests will 
          typically change the state of the runtime. Valid request types are: DeploymentStartRequest 
          DeploymentStopRequest DeploymentOnlineRequest DeploymentOfflineRequest 
          DeploymentStatisticsRequest DeploymentScalingRequest DeploymentRetirementRequest 
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: > 
            #DeploymentStartRequest #DeploymentStopRequest #DeploymentOnlineRequest #DeploymentOfflineRequest 
            #DeploymentStatisticsRequest #DeploymentScalingRequest #DeploymentRetirementRequest
  DeploymentStartRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind: 
        description: >
          This value must always be the string "DeploymentStartRequest". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [DeploymentStartRequest]    
      replicas:
        type: integer
  DeploymentStopRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          This value must always be the string "DeploymentStopRequest". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [DeploymentStopRequest]    
  DeploymentOfflineRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          This value must always be the string "DeploymentOfflineRequest". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [DeploymentOfflineRequest]    
  DeploymentOnlineRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          This value must always be the string "DeploymentOnlineRequest". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [DeploymentOnlineRequest]   
      hosts:
        type: string
      percentage:
        type: number
        minimum: 0
        maximum: 100
  DeploymentStatisticsRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          This value must always be the string "DeploymentStatisticsRequest". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [DeploymentStatisticsRequest]
      hosts:
        type: string
      percentage:
        type: integer
        minimum: 0
        maximum: 100
      duration:
        type: integer
      state:
        type: string
      results:
        type: string
        format: uri
        relationship: '#StatisticsResults'
    readOnly: true
  DeploymentScalingRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          This value must always be the string "DeploymentScalingRequest". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [DeploymentScalingRequest]  
      replicas: 
        type: integer
    readOnly: true
  DeploymentRetirementRequest:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          This value must always be the string "DeploymentRetirementRequest". The kind property is always set by 
          the server in responses to GET. The kind property must be set by the client on POST, 
          and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [DeploymentRetirementRequest]    
  System:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        description: >
          The value must always be the string "System". The kind property is always set by the server in responses to GET.
          The kind property must be set by the client on POST, and must not be set by the client on PATCH. (PUT is not supported) 
        type: string
        enum: [System]
      has_environments:
        description: >
          The value of the has_environments property is the URI of the collection of Environments where this System is deployed. 
          New Environments can be POSTed to this collection—alternatively, 
          a new Environment can be added to the collection by creating the Environment with a value of 'realizes' that references this System.
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#Environment'
      has_components:
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#Component'
  Component:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [Component]
      is_component_of:
        format: uri
        type: string
        relationship: '#System'
      has_revisions:
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#Revision'
  Revision:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [Revision]
      revises:
        format: uri
        type: string
        relationship: '#Component'
      has_deployments:
        format: uri
        type: string
        readOnly: true
        relationship:
          collection_resource: '#MultiValuedRelationship'
          multiplicity: 0:n
          entities: '#Deployment'        
  StatisticsResults:
    type: object
    readOnly: true
  MultiValuedRelationship:
    oneOf:
    - $ref: '#/entities/Collection'
    - $ref: '#/entities/Page'      
  Collection:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Collection]
      items:
        type: array
        items: 
          type: object
    query_parameters:
    - name: properties
      items:
        type: string
      type: array
      required: false
    - name: limit
      type: integer
      minimum: 1
      maximum: 1000
      required: false
    - name: orderby
      type: string
    - name: direction
      type: string
      required: false
      enum: ['ascending', 'descending']
    readOnly: true
  Page:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Page]
      items:
        type: array
        items: 
          type: object
      collection:
        type: string
        format: uri
    query_parameters:
    - name: properties
      items:
        type: string
      type: array
      required: false
    - name: limit
      type: integer
      minimum: 1
      maximum: 1000
      required: false
    readOnly: true
  Resource:
    type: object
    properties:
      self:
        type: string
        readOnly: true
      kind:
        type: string
  PersistentResource:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      created:
        type: string
        format: date-time
        readOnly: true
      creator:
        type: string
        format: URL
        readOnly: true
      modified:
        type: string
        format: date-time
        readOnly: true
      modifier:
        type: string
        format: date-time
        readOnly: true
securityDefinitions:
  sso:
    type: oauth2
    scopes: {}
    flow: password
    tokenUrl: whatever
security:
- sso: []