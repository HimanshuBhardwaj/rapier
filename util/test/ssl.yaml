title: SSL API
version: "0.1"
conventions:
  multi_valued_relationships:
    entities: '#/entities/Collection'
  selector_location: path-segment
entities:
  Environment:
    well_known_URLs: /v1/o/{org}/e/{env}
    query_paths: 
    - keystores 
    - keystores;{name} 
    - keystores;{name}/aliases 
    - keystores;{name}/aliases;{name}/csr 
    - keystores;{name}/aliases;{name}/certificate
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [Environment]
      keystores:
        format: uri
        type: string
        readOnly: true
        x-rapier-relationship:
          entities: '#Keystore'
          multiplicity: 0:n
  Keystore:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      name:
        type: string
      kind:
        type: string
        enum: [Keystore]
      aliases:
        format: uri
        type: string
        readOnly: true
        x-rapier-relationship:
          entities: '#Alias'
          multiplicity: 0:n
          consumes: 
            multi-part/form-data: '#Pkcs12Alias #KeyCertFileAlias #KeyCertJarAlias'
            application/json: '#SelfSignedCertAlias'
  Alias:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      kind:
        type: string
        enum: [Alias]
      name:
        type: string
      key:
        type: string
      certsInfo:
        readOnly: true
        type: array
        items: 
          type: object
          properties:
            version:
              type: integer
            expiryDate:
              type: string
              format: date
            issuer:
              type: string
            subject:
              type: string
      certificate:
        format: uri
        type: string
        x-rapier-relationship:
          multiplicity: 0:1
          entities: '#Certificate'
      csr:
        format: uri
        type: string
        x-rapier-relationship:
          readOnly: true
          entities: '#CSR'
      selfSignedCertificate:
        format: uri
        type: string
        readOnly: true
        x-rapier-relationship:
          multiplicity: 0:n
          entities: '#SelfSignedCertAlias'
  Certificate:
    readOnly: true
    type: string
  CSR:
    readOnly: true
    type: string
  Pkcs12Alias:
    type: object
    resource: false
    properties:
      kind:
        type: string
        enum: [Pkcs12Alias]
      name:
        type: string
      password:
        type: string
      ignoreExpiryValidation:
        type: boolean
      pkcs12File:
        type: string
        format: file
  SelfSignedCertAlias:
    type: object
    resource: false
    properties:
      kind:
        type: string
        enum: [SelfSignedCertAlias]
      alias:
        type: string
      keySize:
        type: string
      certValidityInDays:
        type: integer
      sigAlg:
        type: string
      issuer:
        $ref: '#/definitions/X500Name'
      subject:
        $ref: '#/definitions/X500Name'
      subjectAlternativeDNSNames:
        type: array
        items:
          type: string
  KeyCertFileAlias:
    type: object
    resource: false
    properties:
      kind:
        type: string
        enum: [KeyFileCertFileAlias]
      name:
        type: string
      password:
        type: string
      ignoreExpiryValidation:
        type: boolean
      keyFile:
        type: string
        format: file
      certFile:
        type: string
        format: file
  KeyCertJarAlias:
    type: object
    resource: false
    properties:
      kind:
        type: string
        enum: [KeyFileCertFileAlias]
      name:
        type: string
      password:
        type: string
      ignoreExpiryValidation:
        type: boolean
      keyCertJar:
        type: string
        format: file
  X500Name:
    type: object
    resource: false
    properties:
      countryCose:
        type: string
      state: 
        type: string
      locality:
        type: string
      orgName:
        type: string
      orgUnitName:
        type: string
      email:
        type: string
# Boilerplate schemas from here
  Collection:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Collection]
      items:
        type: array
        items: 
          type: object
    readOnly: true
  PersistentResource:
    allOf:
    - $ref: '#/entities/Resource'
    abstract: true
    type: object
    properties:
      created:
        type: string
        format: date-time
        readOnly: true
      creator:
        type: string
        format: URL
        readOnly: true
      modified:
        type: string
        format: date-time
        readOnly: true
      modifier:
        type: string
        format: date-time
        readOnly: true
    abstract: true
  Resource:
    abstract: true
    type: object
    properties:
      self:
        type: string
      kind:
        type: string
